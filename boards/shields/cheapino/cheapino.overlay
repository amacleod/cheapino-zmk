// cheapino.overlay - DTS overlay for Cheapino keyboard.
// Although physically the Cheapino is a wired split, for the purposes
// of ZMK we will treat it as a unibody keyboard, since the matrix is
// fully wired across the 8p8c connector, needing no controller on the
// right side. The right side rows will be just after the left side
// rows. Likewise, the right side columns will be just after the left
// side columns.

#include <dt-bindings/zmk/matrix_transform.h>
#include "cheapino-layout.dtsi"

&cheapino_layout {
    transform = <&default_transform>;
};

/ {
    chosen {
        zmk,kscan = &cheapino_scan;
        zmk,physical-layout = &cheapino_layout;
        transform = <&default_transform>;
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <12>;
        map = <
            RC(0,6) RC(5,0) RC(0,5) RC(4,0) RC(0,4)    RC(7,10)  RC(10,7) RC(8,10) RC(10,8) RC(9,10)
            RC(1,6) RC(5,1) RC(1,5) RC(4,1) RC(1,4)    RC(10,10)  RC(8,12) RC(12,9) RC(9,12) RC(13,9)
            RC(2,6) RC(5,2) RC(2,5) RC(4,2) RC(2,4)    RC(10,9)  RC(9,12) RC(12,9) RC(9,13) RC(13,8)
                            RC(6,2) RC(6,1) RC(6,0)   RC(7,13) RC(8,12) RC(9,13)
        >;
    };

    cheapino_scan: kscan0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        wakeup-source;

        gpios
            = <&zero_d 27 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //  0: Row1L
            , <&zero_d 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //  1: Row2L
            , <&zero_d 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //  2: Row3L
            , <&zero_d 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  //  3: Row4L
            , <&zero_d 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //  4: Col1L
            , <&zero_d 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //  5: Col2L
            , <&zero_d 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //  6: Col3L
            , <&zero_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  //  7: Row1R or Col1R?
            , <&zero_d 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  //  8: Row2R
            , <&zero_d 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  //  9: Row3R
            , <&zero_d 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 10: Row4R or Row1R?
            , <&zero_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 11: Col1R
            , <&zero_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 12: Col2R
            , <&zero_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 13: Col3R
            ;
    };
};
